server:
  session-timeout: 1800
  tomcat:
    max-http-header-size: 8192
  port: 9001
  servlet:
    context-path : /qrcode
    encoding:
      enabled: true
      force: true
      charset: UTF-8

logging:
  level:
    root: info
    com.cxg.qrcode: debug

spring:
  thymeleaf:
    mode: LEGACYHTML5
    cache: false
  jackson:
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss
  web:
    resources:
      static-locations: classpath:/,classpath:/static,classpath:/public,classpath:/resources,classpath:/META-INF/resources
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/bootdotest?useUnicode=true&characterEncoding=utf8
    username: root
    password: root123
    #   druid连接池配置
    initialSize: 1
    minIdle: 10
    maxActive: 1000
    # 配置获取连接等待超时的时间
    maxWait: 120000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x' FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 200
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true
    redis:
      host: localhost
      port: 6379
      password:
      # 连接超时时间（毫秒）
      timeout: 10000
      pool:
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 10
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 100
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
  jpa:
    database: MYSQL
    show-sql: true
    hibernate:
      ddl-auto: update
      naming:
        strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
# mybatis配置
mybatis:
  configuration:
    map-underscore-to-camel-case: true
  mapper-locations: mybatis/*Mapper.xml
  typeAliasesPackage: com.cxg.qrcode.**.pojo